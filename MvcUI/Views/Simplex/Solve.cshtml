@model Mercoplano.Simplex.Server.MvcUI.Models.SimplexModel
@using Mercoplano.Simplex.Server.MvcUI.Controllers;

@{
    ViewBag.Title = BaseMvc.GetLabel("Solve", (Int16)ViewBag.LanguageId);

    for (int i = 0; i < Model.Equations.Count; i++)
    {
        for (int j = 0; j < Model.Equations[i].Coefficients.Count; j++)
        {
            Model.Equations[i].Coefficients[j].Number = Math.Round(Model.Equations[i].Coefficients[j].Number,6);
        }
    }
}

<h2>@ViewBag.Title</h2>

<div class="row">

    <div class="col-md-4">
        <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
        <!-- Simplex 2016-01 -->
        <ins class="adsbygoogle"
             style="display:block"
             data-ad-client="ca-pub-1847611814626404"
             data-ad-slot="6069916587"
             data-ad-format="auto"></ins>
        <script>
            (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
    </div>

</div>

<h4>@BaseMvc.GetLabel("SimplexSolution", (Int16)ViewBag.LanguageId)</h4>
<hr />
@{
    bool hasSolution = true;
    for (int i = 1; i < Model.Equations.Count; i++)
    {
        if (Model.Equations[i].Coefficients[0].Number < 0)
        {
            hasSolution = false;
            break;
        }
    }
}

<div class="row">
    <div class="col-md-12">
        @if ((Model.Equations[0].Coefficients[0].Number == 0) || (!hasSolution))
        {
            @Html.Label(BaseMvc.GetLabel("NotSolveForOptimalSolutionUntil100Iterations", (Int16)ViewBag.LanguageId))
        }
        else
        {
            @Html.Label(BaseMvc.GetLabel("ResolutionForOptimumSolution", (Int16)ViewBag.LanguageId))
        }
    </div>
</div>

@if ((Model.Goal != "Min(d)") && (Model.goOut != null) && (Model.goOn != null))
{
    <div class="row">
        <div class="col-md-12">
            <p>
                @Html.DisplayFor(m => m.goOut) @BaseMvc.GetLabel("OutOfTheBase", (Int16)ViewBag.LanguageId)
            </p>
            <p>
                @Html.DisplayFor(m => m.goOn) @BaseMvc.GetLabel("IntoTheBase", (Int16)ViewBag.LanguageId)
            </p>
        </div>
    </div>

}
<div class="row">
    <div class="col-md-12">

        @Html.TextBoxFor(m => Model.Goal, new { @readonly = "readonly" })

    </div>
</div>

@{  for (int i = 0; i < Model.Equations.Count; i++)
  {
    <div class="row">
        <div class="col-md-12">
            @Html.TextBoxFor(m => Model.LineDescrs[i].Label, new { @readonly = "readonly" })
            @for (int j = 0; j < Model.Equations[i].Coefficients.Count; j++)
            {
                if (j != 0)
                {
                    <div class="col-md-12">
                        @Html.TextBoxFor(m => Model.Equations[i].Coefficients[j].Number, new { @readonly = "readonly" })
                        @Html.DisplayFor(m => Model.ColumnsDescrs[j].Label)
                    </div>
                }
                else
                {
                    <div class="col-md-12">
                        @Html.TextBoxFor(m => Model.Equations[i].Coefficients[j].Number, new { @readonly = "readonly", })
                        @Html.DisplayFor(m => Model.ColumnsDescrs[j].Label, new { @style = "font-weight:bold;" })
                    </div>
                }
            }
        </div>
    </div>
  }
}
