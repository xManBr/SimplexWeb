@model Mercoplano.Simplex.Server.MvcUI.Models.SimplexStartModel
@using Mercoplano.Simplex.Server.MvcUI.Controllers;

@{
    ViewBag.Title = BaseMvc.GetLabel("Modeling", (Int16)ViewBag.LanguageId);
}

<h2>@BaseMvc.GetLabel("Modeling", (Int16)ViewBag.LanguageId)</h2>

<div class="row">
    <div class="col-md-12">
        <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
        <!-- Simplex 2016-01 -->
        <ins class="adsbygoogle"
             style="display:block"
             data-ad-client="ca-pub-1847611814626404"
             data-ad-slot="6069916587"
             data-ad-format="auto"></ins>
        <script>
            (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
    </div>

</div>

@using (Html.BeginForm("Modeling", "Simplex", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <h4>@BaseMvc.GetLabel("SimplexInequalities", (Int16)ViewBag.LanguageId)</h4>
    <hr />
    @Html.ValidationSummary(true)

    @Html.HiddenFor(m => Model.StepMethod)
    @Html.HiddenFor(m => Model.Method)
    @Html.HiddenFor(m => Model.VariLabel)
    @Html.HiddenFor(m => Model.OriginalDecisionLength)
    @Html.HiddenFor(m => Model.HasSolution)
    @Html.HiddenFor(m => Model.IsFinish)

    for (int i = 0; i < Model.ColumnsDescrs.Count; i++)
    {
        @Html.HiddenFor(m => Model.ColumnsDescrs[i])

    }

    for (int i = 0; i < Model.LineDescrs.Count; i++)
    {
        @Html.HiddenFor(m => Model.LineDescrs[i])

    }

    bool first = true;
    for (int i = 0; i < Model.StartEquations.Count; i++)
    {
        <div class="row">
            <div class="col-md-12">
                @{int ii = 1;
                for (int j = 0; j < Model.StartEquations[i].StartCoefficients.Count; j++)
                {
                    if (ii != Model.StartEquations[i].StartCoefficients.Count)
                    {
                        @Html.EditorFor(model => Model.StartEquations[i].StartCoefficients[j].Number, new { htmlAttributes = new { @class = "form-control", @style = "width:99%; height:360px;" } })
                        @Html.Label(" X" + ii.ToString() + (ii != Model.StartEquations[i].StartCoefficients.Count - 1 ? " + " : " "))
                    }
                    else if (!first)
                    {
                        @Html.DropDownListFor(m => Model.StartEquations[i].RetrictionSign, new SelectList(ViewBag.RetrictionSigns, "value", "text"))
                        @Html.EditorFor(model => Model.StartEquations[i].StartCoefficients[j].Number, new
                   {
                       htmlAttributes = new
                       {
                           @class = "form-control",
                           @style = "width:99%; height:360px;"
                       }
                   })
                    }

                    if ((first) && (ii == Model.StartEquations[i].StartCoefficients.Count))
                    {
                        @Html.DropDownListFor(m => Model.Goal, new SelectList(ViewBag.Goal, "value", "text"));
                                                                                                             first = false;
                    }
                    ii++;
                }
                }

            </div>
        </div>
    }

    <div class="row">
        <div class="col-md-12">
            @BaseMvc.GetLabel("StepByStep", (Int16)ViewBag.LanguageId)
            @Html.CheckBoxFor(m => Model.StepByStep)
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="col-md-12">
                <p>
                    <input type="submit" value="@BaseMvc.GetLabel("Next", (Int16)ViewBag.LanguageId)" class="btn btn-default" />
                </p>
            </div>
        </div>
    </div>

}

